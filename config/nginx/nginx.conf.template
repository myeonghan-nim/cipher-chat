user  nginx;
# CPU 코어 수에 따라 워커 프로세스 수를 자동으로 설정
worker_processes  auto;
error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    # 각 워커 프로세스가 처리할 수 있는 최대 연결 수
    worker_connections  1024;
}

http {
    # 파일 확장자와 MIME 유형 매핑을 통해 올바른 content-type 설정
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 로그 포맷 설정
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    # 파일 전송과 연결 유지 시간 설정
    sendfile        on;
    keepalive_timeout  65;

    # 업스트림 설정: FastAPI 서비스에 대한 설정
    upstream fastapi {
        # Docker Compose 내 서비스 이름 "fastapi"와 환경 변수 FASTAPI_PORT 사용
        server fastapi:${FASTAPI_PORT};
    }

    server {
        # HTTPS로 443 포트를 리슨
        listen 443 ssl;
        server_name localhost;

        # SSL 설정
        ssl_certificate     /etc/ssl/certs/nginx.crt;
        ssl_certificate_key /etc/ssl/private/nginx.key;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            # 모든 요청을 업스트림(fastapi)으로 전달
            proxy_pass http://fastapi;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket 지원: HTTP/1.1 사용 및 업그레이드 헤더 설정
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}
